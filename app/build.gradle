apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "io.fabric"

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "gov.wa.wsdot.android.wsdot"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 21060213
        versionName "6.2.13"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions {
            jvmTarget = "1.8"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    kapt {
        generateStubs = true
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'com.google.android.material:material:1.2.0-alpha06'
    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0'

    implementation 'com.google.android.gms:play-services-location:17.0.0'

    implementation 'com.google.firebase:firebase-core:17.3.0'
    implementation 'com.google.firebase:firebase-analytics:17.3.0'
    implementation 'com.google.firebase:firebase-messaging:20.1.5'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'

    implementation 'androidx.preference:preference-ktx:1.1.1'
    
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    kapt "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    annotationProcessor 'androidx.room:room-compiler:2.2.5'

    // tap target
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.13.0'

    // drag and drop list
    implementation 'com.ernestoyaquello.dragdropswiperecyclerview:drag-drop-swipe-recyclerview:0.5.1'

    // Ads
    implementation 'com.google.android.gms:play-services-ads:19.1.0'

    // Google Maps
    implementation 'com.google.android.gms:play-services-maps:17.0.0'

    // Map Utils
    implementation 'com.google.maps.android:android-maps-utils:0.5'

    // FAB - https://github.com/leinardi/FloatingActionButtonSpeedDial
    implementation "com.leinardi.android:speed-dial:3.1.1"

    // Data bind
    kapt "com.android.databinding:compiler:3.1.4"

    // Navigation - https://developer.android.com/jetpack/androidx/releases/navigation
    def nav_version = "2.2.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Glide - https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    implementation "com.squareup.retrofit2:converter-simplexml:2.3.0"

    // Dagger
    def daggerVersion = '2.22.1'

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    // PermissionsDispatcher https://github.com/permissions-dispatcher/PermissionsDispatcher
    def permissionDispatcherVer = '4.3.1'
    implementation "org.permissionsdispatcher:permissionsdispatcher:$permissionDispatcherVer"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:$permissionDispatcherVer"

    // Testing
    androidTestImplementation "android.arch.persistence.room:testing:2.2.5"

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:core:1.2.0'
    testImplementation "androidx.room:room-testing:2.2.5"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


}

apply plugin: 'com.google.gms.google-services'